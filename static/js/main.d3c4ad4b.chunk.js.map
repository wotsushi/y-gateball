{"version":3,"sources":["LP.tsx","common.tsx","Monster.tsx","Spell.tsx","Trap.tsx","Rule.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lifeValues","initPlayers","Math","random","map","turn","lp","LifePoint","props","now","floor","variant","className","ProgressBar","ControlPanel","Container","row","Row","style","padding","val","Col","Button","width","height","onClick","addLP","x","toString","players","useGlobalState","createGlobalState","playerA","playerB","LP","react","useState","showModal","setShowModal","setPlayerA","setPlayerB","max","Modal","show","Header","Body","Footer","newPlayers","newGame","Encoding","require","linkName","name","nameWithBrackets","unicodeArray","split","_","i","charCodeAt","encodedArray","convert","page","urlEncode","href","target","rel","data","lv","attribute","type","atk","def","num","effect_atk","effectATK","monster","undefined","columns","text","dataField","formatter","sort","sortValue","MonsterTable","bootstrap4","keyField","defaultSorted","order","SpellTable","TrapTable","Rule","App","basename","process","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","path","exact","Monster","Spell","Trap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3c4ad4b.chunk.js","sourcesContent":["import {\n  Button,\n  Container,\n  Col,\n  Row,\n  ProgressBar,\n  Modal,\n} from \"react-bootstrap\";\nimport react from \"react\";\nimport { createGlobalState } from \"react-hooks-global-state\";\n\nconst toStringWithSign = (x: number) => {\n  if (x > 0) {\n    return \"+\" + x.toString();\n  } else {\n    return x.toString();\n  }\n};\nconst lifeValues = [\n  [-50, -100, -200],\n  [-300, -400, -500],\n  [-600, -800, -1000],\n  [-2000, -3000, 1000],\n];\ntype Turn = \"先攻\" | \"後攻\";\ninterface Player {\n  lp: number;\n  turn: Turn;\n}\nconst initPlayers = () => {\n  const turns = Math.random() > 0.5 ? [\"先攻\", \"後攻\"] : [\"後攻\", \"先攻\"];\n  return turns.map((turn) => {\n    return {\n      lp: 8000,\n      turn: turn,\n    } as Player;\n  });\n};\n\nconst LifePoint = (props: { lp: number }) => {\n  const { lp } = props;\n  const now = Math.floor(lp / 80);\n  const variant = (() => {\n    if (lp > 4000) {\n      return \"success\";\n    } else if (lp > 2000) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  })();\n  return (\n    <div className=\"lp-parent bg-light text-black\">\n      <div className=\"lp-header\">LP</div>\n      <ProgressBar variant={variant} now={now}></ProgressBar>\n      <div className=\"lp\">{props.lp}</div>\n    </div>\n  );\n};\n\nconst ControlPanel = (props: { addLP: (lp: number) => void }) => {\n  return (\n    <Container>\n      {lifeValues.map((row) => {\n        return (\n          <Row style={{ padding: 10 }}>\n            {row.map((val) => {\n              return (\n                <Col>\n                  <Button\n                    variant=\"outline-dark\"\n                    style={{ width: \"100px\", height: \"50px\" }}\n                    onClick={() => props.addLP(val)}\n                  >\n                    {toStringWithSign(val)}\n                  </Button>\n                </Col>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </Container>\n  );\n};\n\nconst players = initPlayers();\nconst { useGlobalState } = createGlobalState({\n  playerA: players[0],\n  playerB: players[1],\n});\n\nconst LP = () => {\n  const [showModal, setShowModal] = react.useState(false);\n  const [playerA, setPlayerA] = useGlobalState(\"playerA\");\n  const [playerB, setPlayerB] = useGlobalState(\"playerB\");\n\n  const newGame = () => {\n    const newPlayers = initPlayers();\n    setPlayerA(newPlayers[0]);\n    setPlayerB(newPlayers[1]);\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"player\">\n              <LifePoint lp={playerA.lp}></LifePoint>\n              <div>{playerA.turn}</div>\n            </div>\n          </Col>\n          <Col>\n            <Button onClick={() => setShowModal(true)}>New</Button>\n          </Col>\n          <Col>[←] [→] [履歴]</Col>\n          <Col>\n            <div className=\"player\">\n              <div>{playerB.turn}</div>\n              <LifePoint lp={playerB.lp}></LifePoint>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ControlPanel\n              addLP={(lp: number) => {\n                setPlayerA({ ...playerA, lp: Math.max(0, playerA.lp + lp) });\n              }}\n            ></ControlPanel>\n          </Col>\n          <Col>\n            <ControlPanel\n              addLP={(lp: number) =>\n                setPlayerB({ ...playerB, lp: Math.max(0, playerB.lp + lp) })\n              }\n            ></ControlPanel>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={showModal}>\n        <Modal.Header>New Game?</Modal.Header>\n        <Modal.Body>\n          新しいゲームを開始してよろしいですか？\n          <br />\n          現在のゲームは終了されます。\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => newGame()}>はい</Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            いいえ\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default LP;\n","const Encoding = require(\"encoding-japanese\");\n\nexport const linkName = (name: string) => {\n  const nameWithBrackets = `《${name}》`;\n  const unicodeArray = nameWithBrackets\n    .split(\"\")\n    .map((_, i) => nameWithBrackets.charCodeAt(i));\n  const encodedArray = Encoding.convert(unicodeArray, \"EUCJP\");\n  const page = Encoding.urlEncode(encodedArray);\n  return (\n    <a\n      href={`https://yugioh-wiki.net/index.php?cmd=backup&page=${page}&age=1#content_1_0`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {name}\n    </a>\n  );\n};\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { linkName } from \"./common\";\n\ntype Attribute = \"闇\" | \"光\" | \"地\" | \"水\" | \"炎\" | \"風\";\ntype Type =\n  | \"ドラゴン\"\n  | \"魔法使い\"\n  | \"アンデット\"\n  | \"戦士\"\n  | \"獣戦士\"\n  | \"獣\"\n  | \"鳥獣\"\n  | \"悪魔\"\n  | \"天使\"\n  | \"昆虫\"\n  | \"恐竜\"\n  | \"爬虫類\"\n  | \"魚\"\n  | \"海竜\"\n  | \"機械\"\n  | \"雷\"\n  | \"水\"\n  | \"炎\"\n  | \"岩石\"\n  | \"植物\";\n\ninterface Monster {\n  name: string;\n  lv: number;\n  attribute: Attribute;\n  type: Type;\n  atk: number;\n  effect_atk?: number;\n  def: number;\n  num: number;\n}\n\nconst data: Monster[] = [\n  {\n    name: \"カオス・ソルジャー －開闢の使者－\",\n    lv: 8,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 3000,\n    def: 2500,\n    num: 1,\n  },\n  {\n    name: \"人造人間－サイコ・ショッカー\",\n    lv: 6,\n    attribute: \"闇\",\n    type: \"機械\",\n    atk: 2400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"天空騎士パーシアス\",\n    lv: 5,\n    attribute: \"光\",\n    type: \"天使\",\n    atk: 1900,\n    def: 1400,\n    num: 1,\n  },\n  {\n    name: \"イグザリオン・ユニバース\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"獣戦士\",\n    atk: 1800,\n    effect_atk: 1400,\n    def: 1900,\n    num: 1,\n  },\n  {\n    name: \"霊滅術師 カイクウ\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"魔法使い\",\n    atk: 1800,\n    def: 700,\n    num: 1,\n  },\n  {\n    name: \"魔導戦士 ブレイカー\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"魔法使い\",\n    atk: 1600,\n    effect_atk: 1900,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"同族感染ウィルス\",\n    lv: 4,\n    attribute: \"水\",\n    type: \"水\",\n    atk: 1600,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"ブレイドナイト\",\n    lv: 4,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 1600,\n    effect_atk: 2000,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"ならず者傭兵部隊\",\n    lv: 4,\n    attribute: \"地\",\n    type: \"戦士\",\n    atk: 1000,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"異次元の女戦士\",\n    lv: 4,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 1500,\n    def: 1600,\n    num: 3,\n  },\n  {\n    name: \"首領・ザルーグ\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"戦士\",\n    atk: 1400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"ファイバーポッド\",\n    lv: 3,\n    attribute: \"地\",\n    type: \"植物\",\n    atk: 500,\n    def: 500,\n    num: 1,\n  },\n  {\n    name: \"お注射天使リリー\",\n    lv: 3,\n    attribute: \"地\",\n    type: \"魔法使い\",\n    atk: 400,\n    effect_atk: 3400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"魂を削る死霊\",\n    lv: 3,\n    attribute: \"闇\",\n    type: \"アンデット\",\n    atk: 300,\n    def: 200,\n    num: 1,\n  },\n  {\n    name: \"聖なる魔術師\",\n    lv: 1,\n    attribute: \"光\",\n    type: \"魔法使い\",\n    atk: 300,\n    def: 400,\n    num: 2,\n  },\n  {\n    name: \"キラー・スネーク\",\n    lv: 1,\n    attribute: \"水\",\n    type: \"爬虫類\",\n    atk: 300,\n    def: 250,\n    num: 1,\n  },\n];\n\nconst effectATK = (effect_atk: number | undefined, monster: Monster) =>\n  effect_atk === undefined ? monster.atk : effect_atk;\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"レベル\",\n    dataField: \"lv\",\n    sort: true,\n  },\n  {\n    text: \"属性\",\n    dataField: \"attribute\",\n    sort: true,\n  },\n  {\n    text: \"種族\",\n    dataField: \"type\",\n    sort: true,\n  },\n  {\n    text: \"攻撃力\",\n    dataField: \"atk\",\n    sort: true,\n  },\n  {\n    text: \"効果攻撃力\",\n    dataField: \"effect_atk\",\n    formatter: effectATK,\n    sort: true,\n    sortValue: effectATK,\n  },\n  {\n    text: \"守備力\",\n    dataField: \"def\",\n    sort: true,\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n    sort: true,\n  },\n];\n\nconst MonsterTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={columns}\n    defaultSorted={[{ dataField: \"atk\", order: \"desc\" }]}\n  ></BootstrapTable>\n);\n\nexport default MonsterTable;\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { linkName } from \"./common\";\n\ntype Type = \"通常\" | \"儀式\" | \"永続\" | \"装備\" | \"フィールド\" | \"速攻\";\n\ninterface Spell {\n  name: string;\n  type: Type;\n  num: number;\n}\n\nconst data: Spell[] = [\n  {\n    name: \"押収\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強引な番兵\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強欲な壺\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"苦渋の選択\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"心変わり\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"大嵐\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"ライトニング・ボルテックス\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"光の護封剣\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"抹殺の使徒\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"増援\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強奪\",\n    type: \"装備\",\n    num: 1,\n  },\n  {\n    name: \"早すぎた埋葬\",\n    type: \"装備\",\n    num: 1,\n  },\n  {\n    name: \"スケープ・ゴート\",\n    type: \"速攻\",\n    num: 1,\n  },\n  {\n    name: \"サイクロン\",\n    type: \"速攻\",\n    num: 1,\n  },\n];\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"種類\",\n    dataField: \"type\",\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n  },\n];\n\nconst SpellTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={columns}\n  ></BootstrapTable>\n);\n\nexport default SpellTable;\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { linkName } from \"./common\";\n\ntype Type = \"通常\" | \"永続\" | \"カウンター\";\n\ninterface Trap {\n  name: string;\n  type: Type;\n  num: number;\n}\n\nconst data: Trap[] = [\n  {\n    name: \"破壊輪\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"激流葬\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"奈落の落とし穴\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"砂塵の大竜巻\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"炸裂装甲\",\n    type: \"通常\",\n    num: 2,\n  },\n  {\n    name: \"リビングデッドの呼び声\",\n    type: \"永続\",\n    num: 1,\n  },\n];\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"種類\",\n    dataField: \"type\",\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n  },\n];\n\nconst TrapTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={columns}\n  ></BootstrapTable>\n);\n\nexport default TrapTable;\n","const Rule = () => {\n  return (\n    <ul>\n      <li>お互いのプレイヤーは04環境デッキを用いてデュエルする</li>\n      <li>先攻後攻を入れ替えての2デュエル1セットでの対戦とする</li>\n      <li>先攻ドローあり</li>\n      <li>\n        召喚成功時に優先権が相手に移っていなければ優先権を放棄することなく召喚したモンスターの起動効果を発動できる\n        <ul>\n          <li>\n            例:\n            あなたは《ならず者傭兵部隊》の召喚に成功した。たとえ相手が《破壊輪》を発動する意思を持っていたとしても、あなたはそれより先に《ならず者傭兵部隊》の起動効果を発動できる。\n          </li>\n        </ul>\n      </li>\n      <li>\n        召喚・反転召喚・特殊召喚を無効にするカードの発動タイミングは存在しないものとして扱う\n        <ul>\n          <li>\n            つまり、モンスターの召喚・反転召喚・特殊召喚は必ず成功する（それらを無効にするカードは存在しないため）\n          </li>\n          <li>\n            例1:\n            あなたは《ならず者傭兵部隊》を召喚するつもりだが、起動効果を直ちに発動する意思はないとする。この場合、《ならず者傭兵部隊》を場に出したタイミングで相手に「何か発動しますか？」と\n            <b>一度だけ</b>\n            確認すれば十分である。言い換えると、確認した場合は召喚成功時にあなたが先に《ならず者傭兵部隊》の効果を発動できる権利を放棄したことになる。\n          </li>\n          <li>\n            例2:\n            あなたが《ならず者傭兵部隊》を場に出したとき、相手に一切の確認をせずに《ならず者傭兵部隊》の起動効果を発動してよい。\n          </li>\n        </ul>\n      </li>\n      <li>\n        《抹殺の使徒》の対象となったカードがリバース効果モンスターだった場合に行う処理の代わりに、お互いのプレイヤーは、デッキから同名カードをすべてゲームから除外し、デッキをシャッフルし、フィールド上にセットされたカードおよび手札のカードの名前とその枚数を相手プレイヤーに伝える（どのカードがどの位置にあるのかは伝えない）。\n      </li>\n      <li>\n        エラッタされた下記カードについて、それらのテキストはエラッタ前のテキストとして扱う\n        <ul>\n          <li>\n            《キラー・スネーク》のテキスト:\n            自分のスタンバイフェイズ時にこのカードが墓地に存在している場合、このカードを手札に戻すことができる。\n          </li>\n          <li>\n            《破壊輪》のテキスト:\n            フィールド上に表側表示で存在するモンスター１体を破壊し、お互いにその攻撃力分のダメージを受ける。\n          </li>\n        </ul>\n      </li>\n      <li>\n        用語の変更（ゲーム影響なし）\n        <ul>\n          <li>リリース → 生け贄</li>\n          <li>アドバンス召喚 → 生け贄召喚</li>\n        </ul>\n      </li>\n    </ul>\n  );\n};\nexport default Rule;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport LP from \"./LP\";\nimport MonsterTable from \"./Monster\";\nimport SpellTable from \"./Spell\";\nimport TrapTable from \"./Trap\";\nimport Rule from \"./Rule\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const base = process.env.PUBLIC_URL;\n  return (\n    <Router basename={base}>\n      <div className=\"App\">\n        <Navbar bg=\"light\" expand>\n          <Navbar.Brand as={Link} to=\"/\">\n            04環境\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/monster\">\n                モンスター\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/spell\">\n                魔法\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/trap\">\n                罠\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/rule\">\n                ルール\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/\" exact>\n            <LP />\n          </Route>\n          <Route path=\"/monster\">\n            <MonsterTable />\n          </Route>\n          <Route path=\"/spell\">\n            <SpellTable />\n          </Route>\n          <Route path=\"/trap\">\n            <TrapTable />\n          </Route>\n          <Route path=\"/rule\">\n            <Rule />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}