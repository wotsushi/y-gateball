{"version":3,"sources":["LP.tsx","common.tsx","Monster.tsx","Spell.tsx","Trap.tsx","Rule.tsx","FAQ.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["toStringWithSign","x","toString","formatTime","ms","s","Math","floor","m","lifeValues","playerName","initPlayers","random","map","turn","lp","LifePoint","props","name","result","now","variant","badge","Badge","pill","className","ProgressBar","ControlPanel","Container","row","Row","style","padding","val","Col","Button","width","height","onClick","addLP","players","useGlobalState","createGlobalState","history","logs","head","firstDuelWinnerID","LP","setPlayers","setHistory","setFirstDuelWinnerID","newGame","react","useState","showModal","setShowModal","close","Modal","show","onHide","Header","Body","Footer","useNewGameModal","newPlayers","NewGameModal","showNewGameModal","Date","i","time","playerID","from","to","ListGroup","Item","visibleLogs","len","length","rear","slice","max","reverse","closeButton","useHistoryModal","HistoryModal","showHistoryModal","player","j","results","_","disabled","every","log","md","offset","Encoding","require","scrollWithOffset","el","yCoordinate","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","linkName","card","nameWithBrackets","unicodeArray","split","charCodeAt","encodedArray","convert","page","urlEncode","href","target","rel","isMobileOnly","shorthand","float","scroll","data","lv","attribute","type","atk","def","num","effect_atk","effectATK","monster","undefined","columns","text","dataField","formatter","sort","sortValue","columnsMobile","MonsterTable","bootstrap4","keyField","defaultSorted","order","SpellTable","TrapTable","Rule","faqs","qas","FAQList","faq","id","q","a","App","basename","process","Navbar","bg","expand","sticky","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","path","exact","Monster","Spell","Trap","FAQ","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAkBMA,EAAmB,SAACC,GACxB,OAAIA,EAAI,EACC,IAAMA,EAAEC,WAERD,EAAEC,YAIPC,EAAa,SAACC,GAClB,IAAMC,EAAIC,KAAKC,MAAMH,EAAK,KAC1B,GAAIC,EAAI,GACN,MAAM,GAAN,OAAUA,EAAV,UAEF,IAAMG,EAAIF,KAAKC,MAAMF,EAAI,IACzB,MAAM,GAAN,OAAUG,EAAV,WAGIC,EAAa,CACjB,EAAE,IAAK,KAAM,KACb,EAAE,KAAM,KAAM,KACd,EAAE,KAAM,KAAM,KACd,EAAE,KAAO,KAAO,KAChB,CAAC,MAEGC,EAAa,CAAC,SAAK,UAoBnBC,EAAc,WAElB,OADcL,KAAKM,SAAW,GAAM,CAAC,eAAM,gBAAQ,CAAC,eAAM,iBAC7CC,KAAI,SAACC,GAChB,MAAO,CACLC,GAAI,IACJD,KAAMA,OAKNE,EAAY,SAACC,GAKZ,IACGC,EAA2BD,EAA3BC,KAAMJ,EAAqBG,EAArBH,KAAMK,EAAeF,EAAfE,OAAQJ,EAAOE,EAAPF,GACtBK,EAAMd,KAAKC,MAAMQ,EAAK,IACtBM,EACAN,EAAK,IACA,UACEA,EAAK,IACP,UAEA,SAGLO,EACW,QAAXH,EAEA,cAACI,EAAA,EAAD,CAAOC,MAAI,EAACH,QAAQ,OAApB,eAIkB,SAAXF,EAEP,cAACI,EAAA,EAAD,CAAOC,MAAI,EAACH,QAAQ,OAApB,eAIkB,SAAXF,EAEP,cAACI,EAAA,EAAD,CAAOC,MAAI,EAACH,QAAQ,UAApB,eAKK,KAGX,OACE,sBAAKI,UAAU,gCAAf,UACE,sBAAKA,UAAU,YAAf,UACGP,EADH,SACUJ,EADV,SACiBQ,KAEjB,cAACI,EAAA,EAAD,CAAaL,QAASA,EAASD,IAAKA,IACpC,qBAAKK,UAAU,KAAf,SAAqBR,EAAMF,SAK3BY,EAAe,SAACV,GACpB,OACE,cAACW,EAAA,EAAD,UACGnB,EAAWI,KAAI,SAACgB,GACf,OACE,cAACC,EAAA,EAAD,CAAKC,MAAO,CAAEC,QAAS,IAAvB,SACGH,EAAIhB,KAAI,SAACoB,GACR,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEd,QAAQ,oBACRU,MAAO,CACLK,MAAO,QACPC,OAAQ,QAEVC,QAAS,kBAAMrB,EAAMsB,MAAMN,IAN7B,SAQGjC,EAAiBiC,kBAYhCO,EAAU7B,IACR8B,EAAmBC,YAAkB,CAC3CF,QAASA,EACTG,QAAS,CACPC,KAAM,GACNC,MAAO,GAGTC,kBAAmB,OAPbL,eAqROM,EA1LJ,WAAO,IAAD,EACeN,EAAe,WAD9B,mBACRD,EADQ,KACCQ,EADD,OAEeP,EAAe,WAF9B,mBAERE,EAFQ,KAECM,EAFD,OAIbR,EAAe,qBAJF,mBAGRK,EAHQ,KAGWI,EAHX,OAjFO,SACtBC,GACqC,IAAD,EACFC,IAAMC,UAAS,GADb,mBAC7BC,EAD6B,KAClBC,EADkB,KAE9BC,EAAQ,kBAAMD,GAAa,IAyBjC,MAAO,CAxBc,kBACnB,eAACE,EAAA,EAAD,CAAOC,KAAMJ,EAAWK,OAAQH,EAAhC,UACE,cAACC,EAAA,EAAMG,OAAP,wBACA,eAACH,EAAA,EAAMI,KAAP,gIAEE,uBAFF,0FAKA,eAACJ,EAAA,EAAMK,OAAP,WACE,cAAC3B,EAAA,EAAD,CACEG,QAAS,WACPa,IACAI,GAAa,IAHjB,0BAQA,cAACpB,EAAA,EAAD,CAAQd,QAAQ,YAAYiB,QAASkB,EAArC,uCAMmB,kBAAMD,GAAa,KA8FHQ,EApCzB,WACd,IAAMC,EAAarD,IACnBqC,EAAWgB,GACXf,EAAW,CAAEL,KAAM,GAAIC,MAAO,IAC9BK,EAAqB,SATR,mBAyCRe,EAzCQ,KAyCMC,EAzCN,OAjDO,WAGlB,IAAD,EAC+Bd,IAAMC,UAAS,GAD9C,mBACIC,EADJ,KACeC,EADf,KAEGC,EAAQ,kBAAMD,GAAa,IAyCjC,MAAO,CAxCc,SAACtC,GAAiC,IAC7C0B,EAAY1B,EAAZ0B,QACFE,EAAOF,EAAQE,KACfzB,EAAM+C,KAAK/C,MACXwB,EAAOD,EAAQC,KAAK/B,KAAI,WAA+BuD,GAAO,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,GACrD,OACE,eAACC,EAAA,EAAUC,KAAX,CAAgBrD,QAAS+C,IAAMvB,EAAO,OAAS,GAA/C,UACG1C,EAAWiB,EAAMiD,GADpB,WAC8B3D,EAAW4D,GADzC,IACqDC,EADrD,WAC8DC,EAD9D,KAEGxE,EAAiBwE,EAAKD,GAFzB,UAMEI,EAAe,WACnB,IAAMC,EAAMjC,EAAQC,KAAKiC,OAInBC,EAAOF,EAAM/B,EAAO,EAE1B,OAJcA,GAID,EAEJD,EAAKmC,MAAM,EAAG,IAEnBD,GAAQ,EAEHlC,EAAKmC,MAAMzE,KAAK0E,IAAI,EAAGJ,EAAM,KAG/BhC,EAAKmC,MAAMlC,EAAO,EAAGA,EAAO,GAhBhB,GAiBhBoC,UACL,OACE,eAACxB,EAAA,EAAD,CAAOC,KAAMJ,EAAWK,OAAQH,EAAhC,UACE,cAACC,EAAA,EAAMG,OAAP,CAAcsB,aAAW,EAAzB,gFACA,cAACzB,EAAA,EAAMI,KAAP,UACE,cAACY,EAAA,EAAD,UAAYE,UAKK,kBAAMpB,GAAa,KA8CH4B,GA1C1B,mBA0CRC,EA1CQ,KA0CMC,EA1CN,KA2CT9C,EAAQ,SAAC6B,GAAD,OAAe,SAACrD,GAC5B,IAAMuE,EAAS9C,EAAQ4B,GACjBI,EAAKlE,KAAK0E,IAAI,EAAGM,EAAOvE,GAAKA,GACnCkC,EAAW,CACTL,KAAK,GAAD,mBACCD,EAAQC,KAAKmC,MAAM,EAAGpC,EAAQE,KAAO,IADtC,CAEF,CACEwB,KAAMF,KAAK/C,MACXkD,SAAUF,EACVG,KAAMe,EAAOvE,GACbyD,QAGJ3B,KAAMF,EAAQE,KAAO,IAEvBG,EACER,EAAQ3B,KAAI,SAACyE,EAAQC,GACnB,OAAIA,IAAMnB,EACD,2BAAKkB,GAAZ,IAAoBvE,GAAIyD,IAEnBc,QA0BPE,EAAUhD,EAAQ3B,KAAI,SAAC4E,EAAGrB,GAC9B,OAA0B,OAAtBtB,EACK,KACEsB,IAAMtB,EACR,OACyB,IAAvBA,EACF,OAEA,UAIX,OACE,qCACE,eAAClB,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEV,UAAU,UACVa,QAzCK,WACfY,GAAqB,WACnB,OAAsB,IAAlBV,EAAQ,GAAGzB,IAA8B,IAAlByB,EAAQ,GAAGzB,IAC5B,EACmB,IAAlByB,EAAQ,GAAGzB,GACb,EAEA,KAGXkC,EAAW,CAAEL,KAAM,GAAIC,MAAO,IAC9BG,EAAW,CACT,CACEjC,GAAI,IACJD,KAAM0B,EAAQ,GAAG1B,MAEnB,CACEC,GAAI,IACJD,KAAM0B,EAAQ,GAAG1B,SAwBX4E,SACwB,OAAtB5C,GACAN,EAAQmD,OAAM,SAACL,GAAD,OAAYA,EAAOvE,GAAK,KAL1C,uBAUA,cAACoB,EAAA,EAAD,CACEV,UAAU,UACVJ,QAAQ,oBACRiB,QA5GC,WACX,KAAIK,EAAQE,KAAO,GAAnB,CAGA,IAAM+C,EAAMjD,EAAQC,KAAKD,EAAQE,MACjCG,EACER,EAAQ3B,KAAI,SAACyE,EAAQlB,GACnB,OAAIA,IAAMwB,EAAItB,SACL,2BAAKgB,GAAZ,IAAoBvE,GAAI6E,EAAIrB,OAEvBe,MAGXrC,EAAW,2BAAKN,GAAN,IAAeE,KAAMF,EAAQE,KAAO,OAgGpC6C,SAAU/C,EAAQE,KAAO,EAJ3B,SAME,cAAC,IAAD,MAEF,cAACV,EAAA,EAAD,CACEV,UAAU,UACVJ,QAAQ,oBACRiB,QArGC,WACX,KAAIK,EAAQE,MAAQF,EAAQC,KAAKiC,OAAS,GAA1C,CAGA,IAAMe,EAAMjD,EAAQC,KAAKD,EAAQE,KAAO,GACxCG,EACER,EAAQ3B,KAAI,SAACyE,EAAQlB,GACnB,OAAIA,IAAMwB,EAAItB,SACL,2BAAKgB,GAAZ,IAAoBvE,GAAI6E,EAAIpB,KAEvBc,MAGXrC,EAAW,2BAAKN,GAAN,IAAeE,KAAMF,EAAQE,KAAO,OAyFpC6C,SAAU/C,EAAQE,MAAQF,EAAQC,KAAKiC,OAAS,EAJlD,SAME,cAAC,IAAD,MAEF,cAAC1C,EAAA,EAAD,CACEV,UAAU,UACVJ,QAAQ,oBACRiB,QAAS+C,EAHX,SAKE,cAAC,IAAD,MAEF,cAAClD,EAAA,EAAD,CACEV,UAAU,UACVJ,QAAQ,YACRiB,QAAS4B,EAHX,sBASJ,eAACpC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,UACE,qBAAKT,UAAU,SAAf,SACE,cAAC,EAAD,CACEP,KAAMR,EAAW,GACjBI,KAAM0B,EAAQ,GAAG1B,KACjBK,OAAQqE,EAAQ,GAChBzE,GAAIyB,EAAQ,GAAGzB,SAIrB,cAACmB,EAAA,EAAD,CAAK2D,GAAI,CAAEC,OAAQ,GAAnB,SACE,qBAAKrE,UAAU,SAAf,SACE,cAAC,EAAD,CACEP,KAAMR,EAAW,GACjBI,KAAM0B,EAAQ,GAAG1B,KACjBK,OAAQqE,EAAQ,GAChBzE,GAAIyB,EAAQ,GAAGzB,YAKvB,cAACe,EAAA,EAAD,UACGU,EAAQ3B,KAAI,SAAC4E,EAAGrB,GACf,OACE,cAAClC,EAAA,EAAD,UACE,cAAC,EAAD,CAAcK,MAAOA,EAAM6B,eAMrC,cAACH,EAAD,IACA,cAACmB,EAAD,CAAczC,QAASA,Q,iCCravBoD,EAAWC,EAAQ,KAGnBC,EAAmB,SAACC,GACxB,IAAMC,EAAcD,EAAGE,wBAAwBC,IAAMC,OAAOC,YAE5DD,OAAOE,SAAS,CAAEH,IAAKF,GADN,GAC6BM,SAAU,YAG7CC,EAAW,SAACxF,EAAcyF,GACrC,IAAMC,EAAgB,gBAAO1F,EAAP,UAChB2F,EAAeD,EAClBE,MAAM,IACNjG,KAAI,SAAC4E,EAAGrB,GAAJ,OAAUwC,EAAiBG,WAAW3C,MACvC4C,EAAejB,EAASkB,QAAQJ,EAAc,SAC9CK,EAAOnB,EAASoB,UAAUH,GAChC,OACE,qCACE,mBACEI,KAAI,4DAAuDF,EAAvD,sBACJG,OAAO,SACPC,IAAI,sBAHN,SAKGC,gBAAgBZ,EAAKa,UAAYb,EAAKa,UAAYtG,IAErD,sBAAMa,MAAO,CAAE0F,MAAO,SAAtB,SACE,cAAC,IAAD,CAAMjD,GAAE,eAAUtD,GAAQwG,OAAQzB,EAAlC,SACE,cAAC1E,EAAA,EAAD,CAAOF,QAAQ,YAAf,yBCSJsG,EAAkB,CACtB,CACEzG,KAAM,oGACNsG,UAAW,eACXI,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,IACLC,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,uFACNsG,UAAW,iCACXI,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,KACLC,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,yDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,KACLC,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,2EACNsG,UAAW,uCACXI,GAAI,EACJC,UAAW,SACXC,KAAM,qBACNC,IAAK,KACLG,WAAY,KACZF,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,oDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,2BACNC,IAAK,KACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,0DACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,2BACNC,IAAK,KACLG,WAAY,KACZF,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,mDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,SACNC,IAAK,KACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,6CACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,KACLG,WAAY,IACZF,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,6CACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,KACLC,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,6CACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,KACLC,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,mDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,IACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,mDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,eACNC,IAAK,IACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,mDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,2BACNC,IAAK,IACLG,WAAY,KACZF,IAAK,KACLC,IAAK,GAEP,CACE/G,KAAM,uCACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,iCACNC,IAAK,IACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,uCACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,2BACNC,IAAK,IACLC,IAAK,IACLC,IAAK,GAEP,CACE/G,KAAM,mDACN0G,GAAI,EACJC,UAAW,SACXC,KAAM,qBACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IAIHE,EAAY,SAACD,EAAgCE,GAAjC,YACDC,IAAfH,EAA2BE,EAAQL,IAAMG,GAErCI,EAAU,CACd,CACEC,KAAM,2BACNC,UAAW,OACXC,UAAW/B,GAEb,CACE6B,KAAM,qBACNC,UAAW,KACXE,MAAM,GAER,CACEH,KAAM,eACNC,UAAW,YACXE,MAAM,GAER,CACEH,KAAM,eACNC,UAAW,OACXE,MAAM,GAER,CACEH,KAAM,qBACNC,UAAW,MACXE,MAAM,GAER,CACEH,KAAM,iCACNC,UAAW,aACXC,UAAWN,EACXO,MAAM,EACNC,UAAWR,GAEb,CACEI,KAAM,qBACNC,UAAW,MACXE,MAAM,GAER,CACEH,KAAM,eACNC,UAAW,MACXE,MAAM,IAIJE,EAAgB,CACpB,CACEL,KAAM,2BACNC,UAAW,OACXC,UAAW/B,GAEb,CACE6B,KAAM,qBACNC,UAAW,MACXE,MAAM,GAER,CACEH,KAAM,iCACNC,UAAW,aACXC,UAAWN,EACXO,MAAM,EACNC,UAAWR,GAEb,CACEI,KAAM,qBACNC,UAAW,MACXE,MAAM,GAER,CACEH,KAAM,eACNC,UAAW,MACXE,MAAM,IAcKG,EAVM,kBACnB,cAAC,IAAD,CACEC,YAAU,EACVC,SAAS,OACTpB,KAAMA,EACNW,QAASf,eAAeqB,EAAgBN,EACxCU,cAAe,CAAC,CAAER,UAAW,MAAOS,MAAO,YC3QzCtB,EAAgB,CACpB,CACEzG,KAAM,eACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,2BACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,2BACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,eACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iFACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,eACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,eACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,uCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,mDACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,iCACN4G,KAAM,eACNG,IAAK,IAIHK,EAAU,CACd,CACEC,KAAM,2BACNC,UAAW,OACXC,UAAW/B,GAEb,CACE6B,KAAM,eACNC,UAAW,QAEb,CACED,KAAM,eACNC,UAAW,QAaAU,EATI,kBACjB,cAAC,IAAD,CACEJ,YAAU,EACVC,SAAS,OACTpB,KAAMA,EACNW,QAASA,KC9FPX,EAAe,CACnB,CACEzG,KAAM,qBACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,qBACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,6CACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,uCACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,2BACN4G,KAAM,eACNG,IAAK,GAEP,CACE/G,KAAM,qEACN4G,KAAM,eACNG,IAAK,IAIHK,EAAU,CACd,CACEC,KAAM,2BACNC,UAAW,OACXC,UAAW/B,GAEb,CACE6B,KAAM,eACNC,UAAW,QAEb,CACED,KAAM,eACNC,UAAW,QAaAW,EATG,kBAChB,cAAC,IAAD,CACEL,YAAU,EACVC,SAAS,OACTpB,KAAMA,EACNW,QAASA,KCNEc,EA3DF,WACX,OACE,+BACE,0LACA,0LACA,4EACA,gWAEE,6BACE,uiBAMJ,8RAEE,+BACE,oVAGA,2jBAGE,yDAHF,oaAMA,6YAMJ,w+BAGA,wRAEE,+BACE,4YAIA,wWAMJ,sHAEE,+BACE,oFACA,4HCjDJC,GAAc,CAClB,CACEnI,KAAM,oGACNoI,IAAK,CACH,CACE,+gBACA,gBAEF,CACE,0fACA,gBAEF,CACE,4mBACA,kBAIN,CACEpI,KAAM,uFACNoI,IAAK,CACH,CACE,ySACA,sBAEF,CACE,mbACA,gBAEF,CACE,idACA,sBAEF,CACE,uXACA,kBAIN,CACEpI,KAAM,yDACNoI,IAAK,CACH,CACE,iUACA,4wBAIN,CACEpI,KAAM,2EACNoI,IAAK,CACH,CACE,uRACA,8+BAEF,CACE,igBACA,gBAEF,CACE,qcACA,wBAIN,CACEpI,KAAM,oDACNoI,IAAK,CACH,CACE,2eACA,sBAEF,CACE,sWACA,mqBAIN,CACEpI,KAAM,0DACNoI,IAAK,CACH,CACE,yWACA,2VAEF,CACE,oSACA,wBAIN,CACEpI,KAAM,mDACNoI,IAAK,CACH,CACE,2VACA,kBAIN,CACEpI,KAAM,6CACNoI,IAAK,IAEP,CACEpI,KAAM,6CACNoI,IAAK,CACH,CACE,sWACA,iqBAEF,CACE,qTACA,0YAEF,CACE,umBACA,gBAEF,CACE,+hBACA,kBAIN,CACEpI,KAAM,6CACNoI,IAAK,CACH,CACE,iZACA,qOAIN,CACEpI,KAAM,mDACNoI,IAAK,CACH,CACE,mUACA,kBAIN,CACEpI,KAAM,mDACNoI,IAAK,CACH,CACE,qWACA,gBAEF,CACE,idACA,gBAEF,CACE,iUACA,0wBAEF,CACE,qTACA,4YAIN,CACEpI,KAAM,mDACNoI,IAAK,CACH,CACE,kOACA,sBAEF,CACE,mMACA,sBAEF,CACE,+SACA,oCAIN,CACEpI,KAAM,uCACNoI,IAAK,CACH,CACE,+bACA,gBAEF,CACE,iRACA,gBAEF,CACE,qWACA,8aAEF,CACE,mVACA,sBAEF,CACE,+SACA,wBAIN,CACEpI,KAAM,uCACNoI,IAAK,CACH,CACE,qrBACA,gYAIN,CACEpI,KAAM,mDACNoI,IAAK,IAEP,CACEpI,KAAM,eACNoI,IAAK,IAEP,CACEpI,KAAM,iCACNoI,IAAK,IAEP,CACEpI,KAAM,2BACNoI,IAAK,IAEP,CACEpI,KAAM,iCACNoI,IAAK,IAEP,CACEpI,KAAM,2BACNoI,IAAK,CACH,CACE,8UACA,0IAIN,CACEpI,KAAM,eACNoI,IAAK,IAEP,CACEpI,KAAM,iFACNoI,IAAK,CACH,CACE,6RACA,wBAIN,CACEpI,KAAM,iCACNoI,IAAK,CACH,CACE,qNACA,gBAEF,CACE,qiBACA,gBAEF,CA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","file":"static/js/main.01182f58.chunk.js","sourcesContent":["import {\n  Badge,\n  Button,\n  Container,\n  Col,\n  Row,\n  ProgressBar,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport react from \"react\";\nimport { createGlobalState } from \"react-hooks-global-state\";\nimport {\n  BsFillCaretLeftFill,\n  BsFillCaretRightFill,\n  BsList,\n} from \"react-icons/bs\";\n\nconst toStringWithSign = (x: number) => {\n  if (x > 0) {\n    return \"+\" + x.toString();\n  } else {\n    return x.toString();\n  }\n};\n\nconst formatTime = (ms: number) => {\n  const s = Math.floor(ms / 1000);\n  if (s < 60) {\n    return `${s}秒`;\n  }\n  const m = Math.floor(s / 60);\n  return `${m}分`;\n};\n\nconst lifeValues = [\n  [-50, -100, -200],\n  [-300, -400, -500],\n  [-600, -800, -900],\n  [-1000, -2000, -3000],\n  [1000],\n];\nconst playerName = [\"光\", \"闇\"];\ntype Turn = \"先攻\" | \"後攻\";\ninterface Player {\n  lp: number;\n  turn: Turn;\n}\ninterface LPLog {\n  time: number;\n  playerID: number;\n  from: number;\n  to: number;\n}\n\ninterface History {\n  logs: LPLog[];\n  head: number;\n}\n\ntype Result = \"Win\" | \"Lose\" | \"Draw\";\n\nconst initPlayers = () => {\n  const turns = Math.random() > 0.5 ? [\"先攻\", \"後攻\"] : [\"後攻\", \"先攻\"];\n  return turns.map((turn) => {\n    return {\n      lp: 8000,\n      turn: turn,\n    } as Player;\n  });\n};\n\nconst LifePoint = (props: {\n  name: string;\n  turn: string;\n  result: Result | null;\n  lp: number;\n}) => {\n  const { name, turn, result, lp } = props;\n  const now = Math.floor(lp / 80);\n  const variant = (() => {\n    if (lp > 4000) {\n      return \"success\";\n    } else if (lp > 2000) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  })();\n  const badge = (() => {\n    if (result === \"Win\") {\n      return (\n        <Badge pill variant=\"info\">\n          W\n        </Badge>\n      );\n    } else if (result === \"Lose\") {\n      return (\n        <Badge pill variant=\"dark\">\n          L\n        </Badge>\n      );\n    } else if (result === \"Draw\") {\n      return (\n        <Badge pill variant=\"warning\">\n          D\n        </Badge>\n      );\n    } else {\n      return null;\n    }\n  })();\n  return (\n    <div className=\"lp-parent bg-light text-black\">\n      <div className=\"lp-header\">\n        {name}（{turn}）{badge}\n      </div>\n      <ProgressBar variant={variant} now={now}></ProgressBar>\n      <div className=\"lp\">{props.lp}</div>\n    </div>\n  );\n};\n\nconst ControlPanel = (props: { addLP: (lp: number) => void }) => {\n  return (\n    <Container>\n      {lifeValues.map((row) => {\n        return (\n          <Row style={{ padding: 15 }}>\n            {row.map((val) => {\n              return (\n                <Col>\n                  <Button\n                    variant=\"outline-secondary\"\n                    style={{\n                      width: \"100px\",\n                      height: \"60px\",\n                    }}\n                    onClick={() => props.addLP(val)}\n                  >\n                    {toStringWithSign(val)}\n                  </Button>\n                </Col>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </Container>\n  );\n};\n\nconst players = initPlayers();\nconst { useGlobalState } = createGlobalState({\n  players: players,\n  history: {\n    logs: [],\n    head: -1,\n  } as History,\n  // 引き分けの場合は-1, 初戦が終了していない場合はnull\n  firstDuelWinnerID: null as number | null,\n});\n\nconst useNewGameModal = (\n  newGame: () => void\n): [() => JSX.Element, () => void] => {\n  const [showModal, setShowModal] = react.useState(false);\n  const close = () => setShowModal(false);\n  const NewGameModal = () => (\n    <Modal show={showModal} onHide={close}>\n      <Modal.Header>New Game?</Modal.Header>\n      <Modal.Body>\n        新しいゲームを開始してよろしいですか？\n        <br />\n        現在のゲームは終了されます。\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            newGame();\n            setShowModal(false);\n          }}\n        >\n          はい\n        </Button>\n        <Button variant=\"secondary\" onClick={close}>\n          いいえ\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n  const showNewGameModal = () => setShowModal(true);\n  return [NewGameModal, showNewGameModal];\n};\n\nconst useHistoryModal = (): [\n  (props: { history: History }) => JSX.Element,\n  () => void\n] => {\n  const [showModal, setShowModal] = react.useState(false);\n  const close = () => setShowModal(false);\n  const HistoryModal = (props: { history: History }) => {\n    const { history } = props;\n    const head = history.head;\n    const now = Date.now();\n    const logs = history.logs.map(({ time, playerID, from, to }, i) => {\n      return (\n        <ListGroup.Item variant={i === head ? \"dark\" : \"\"}>\n          {formatTime(now - time)}前: {playerName[playerID]} {from} → {to} (\n          {toStringWithSign(to - from)})\n        </ListGroup.Item>\n      );\n    });\n    const visibleLogs = (() => {\n      const len = history.logs.length;\n      // HEADより前のログの数\n      const front = head;\n      // HEADより後のログの数\n      const rear = len - head - 1;\n\n      if (front <= 5) {\n        // 前が少ないので前から10個返すだけ\n        return logs.slice(0, 10);\n      }\n      if (rear <= 4) {\n        // 後ろが少ないので、後ろから10個返すだけ\n        return logs.slice(Math.max(0, len - 10));\n      }\n      // 前も後ろも十分にログがある場合はHEADを中心に10個のログを返す\n      return logs.slice(head - 5, head + 5);\n    })().reverse();\n    return (\n      <Modal show={showModal} onHide={close}>\n        <Modal.Header closeButton>ライフポイント変動ログ</Modal.Header>\n        <Modal.Body>\n          <ListGroup>{visibleLogs}</ListGroup>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n  const showHistoryModal = () => setShowModal(true);\n  return [HistoryModal, showHistoryModal];\n};\n\nconst LP = () => {\n  const [players, setPlayers] = useGlobalState(\"players\");\n  const [history, setHistory] = useGlobalState(\"history\");\n  const [firstDuelWinnerID, setFirstDuelWinnerID] =\n    useGlobalState(\"firstDuelWinnerID\");\n  const newGame = () => {\n    const newPlayers = initPlayers();\n    setPlayers(newPlayers);\n    setHistory({ logs: [], head: -1 });\n    setFirstDuelWinnerID(null);\n  };\n  const undo = () => {\n    if (history.head < 0) {\n      return;\n    }\n    const log = history.logs[history.head];\n    setPlayers(\n      players.map((player, i) => {\n        if (i === log.playerID) {\n          return { ...player, lp: log.from };\n        }\n        return player;\n      })\n    );\n    setHistory({ ...history, head: history.head - 1 });\n  };\n  const redo = () => {\n    if (history.head >= history.logs.length - 1) {\n      return;\n    }\n    const log = history.logs[history.head + 1];\n    setPlayers(\n      players.map((player, i) => {\n        if (i === log.playerID) {\n          return { ...player, lp: log.to };\n        }\n        return player;\n      })\n    );\n    setHistory({ ...history, head: history.head + 1 });\n  };\n  const [NewGameModal, showNewGameModal] = useNewGameModal(newGame);\n  const [HistoryModal, showHistoryModal] = useHistoryModal();\n  const addLP = (i: number) => (lp: number) => {\n    const player = players[i];\n    const to = Math.max(0, player.lp + lp);\n    setHistory({\n      logs: [\n        ...history.logs.slice(0, history.head + 1),\n        {\n          time: Date.now(),\n          playerID: i,\n          from: player.lp,\n          to,\n        },\n      ],\n      head: history.head + 1,\n    });\n    setPlayers(\n      players.map((player, j) => {\n        if (j === i) {\n          return { ...player, lp: to };\n        }\n        return player;\n      })\n    );\n  };\n  const nextDuel = () => {\n    setFirstDuelWinnerID(() => {\n      if (players[0].lp === 0 && players[1].lp === 0) {\n        return -1;\n      } else if (players[0].lp === 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    setHistory({ logs: [], head: -1 });\n    setPlayers([\n      {\n        lp: 8000,\n        turn: players[1].turn,\n      },\n      {\n        lp: 8000,\n        turn: players[0].turn,\n      },\n    ]);\n  };\n  const results = players.map((_, i): Result | null => {\n    if (firstDuelWinnerID === null) {\n      return null;\n    } else if (i === firstDuelWinnerID) {\n      return \"Win\";\n    } else if (firstDuelWinnerID === -1) {\n      return \"Draw\";\n    } else {\n      return \"Lose\";\n    }\n  });\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <Button\n              className=\"toolbar\"\n              onClick={nextDuel}\n              disabled={\n                firstDuelWinnerID !== null ||\n                players.every((player) => player.lp > 0)\n              }\n            >\n              Next Duel\n            </Button>\n            <Button\n              className=\"toolbar\"\n              variant=\"outline-secondary\"\n              onClick={undo}\n              disabled={history.head < 0}\n            >\n              <BsFillCaretLeftFill />\n            </Button>\n            <Button\n              className=\"toolbar\"\n              variant=\"outline-secondary\"\n              onClick={redo}\n              disabled={history.head >= history.logs.length - 1}\n            >\n              <BsFillCaretRightFill />\n            </Button>\n            <Button\n              className=\"toolbar\"\n              variant=\"outline-secondary\"\n              onClick={showHistoryModal}\n            >\n              <BsList />\n            </Button>\n            <Button\n              className=\"toolbar\"\n              variant=\"secondary\"\n              onClick={showNewGameModal}\n            >\n              New\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"player\">\n              <LifePoint\n                name={playerName[0]}\n                turn={players[0].turn}\n                result={results[0]}\n                lp={players[0].lp}\n              ></LifePoint>\n            </div>\n          </Col>\n          <Col md={{ offset: 6 }}>\n            <div className=\"player\">\n              <LifePoint\n                name={playerName[1]}\n                turn={players[1].turn}\n                result={results[1]}\n                lp={players[1].lp}\n              ></LifePoint>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          {players.map((_, i) => {\n            return (\n              <Col>\n                <ControlPanel addLP={addLP(i)}></ControlPanel>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n      <NewGameModal />\n      <HistoryModal history={history} />\n    </>\n  );\n};\n\nexport default LP;\n","import { HashLink as Link } from \"react-router-hash-link\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport { Badge } from \"react-bootstrap\";\n\nconst Encoding = require(\"encoding-japanese\");\n\n// https://github.com/rafgraph/react-router-hash-link/issues/25#issuecomment-536688104\nconst scrollWithOffset = (el: HTMLElement) => {\n  const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n  const yOffset = -60;\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: \"smooth\" });\n};\n\nexport const linkName = (name: string, card: { shorthand: string }) => {\n  const nameWithBrackets = `《${name}》`;\n  const unicodeArray = nameWithBrackets\n    .split(\"\")\n    .map((_, i) => nameWithBrackets.charCodeAt(i));\n  const encodedArray = Encoding.convert(unicodeArray, \"EUCJP\");\n  const page = Encoding.urlEncode(encodedArray);\n  return (\n    <>\n      <a\n        href={`https://yugioh-wiki.net/index.php?cmd=backup&page=${page}&age=1#content_1_0`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {isMobileOnly && card.shorthand ? card.shorthand : name}\n      </a>\n      <span style={{ float: \"right\" }}>\n        <Link to={`/faq#${name}`} scroll={scrollWithOffset}>\n          <Badge variant=\"secondary\">FAQ</Badge>\n        </Link>\n      </span>\n    </>\n  );\n};\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { isMobileOnly } from \"react-device-detect\";\n\nimport { linkName } from \"./common\";\n\ntype Attribute = \"闇\" | \"光\" | \"地\" | \"水\" | \"炎\" | \"風\";\ntype Type =\n  | \"ドラゴン\"\n  | \"魔法使い\"\n  | \"アンデット\"\n  | \"戦士\"\n  | \"獣戦士\"\n  | \"獣\"\n  | \"鳥獣\"\n  | \"悪魔\"\n  | \"天使\"\n  | \"昆虫\"\n  | \"恐竜\"\n  | \"爬虫類\"\n  | \"魚\"\n  | \"海竜\"\n  | \"機械\"\n  | \"雷\"\n  | \"水\"\n  | \"炎\"\n  | \"岩石\"\n  | \"植物\";\n\ninterface Monster {\n  name: string;\n  shorthand?: string;\n  lv: number;\n  attribute: Attribute;\n  type: Type;\n  atk: number;\n  effect_atk?: number;\n  def: number;\n  num: number;\n}\n\nconst data: Monster[] = [\n  {\n    name: \"カオス・ソルジャー －開闢の使者－\",\n    shorthand: \"開闢\",\n    lv: 8,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 3000,\n    def: 2500,\n    num: 1,\n  },\n  {\n    name: \"人造人間－サイコ・ショッカー\",\n    shorthand: \"ショッカー\",\n    lv: 6,\n    attribute: \"闇\",\n    type: \"機械\",\n    atk: 2400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"天空騎士パーシアス\",\n    lv: 5,\n    attribute: \"光\",\n    type: \"天使\",\n    atk: 1900,\n    def: 1400,\n    num: 1,\n  },\n  {\n    name: \"イグザリオン・ユニバース\",\n    shorthand: \"イグザリオン\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"獣戦士\",\n    atk: 1800,\n    effect_atk: 1400,\n    def: 1900,\n    num: 1,\n  },\n  {\n    name: \"霊滅術師 カイクウ\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"魔法使い\",\n    atk: 1800,\n    def: 700,\n    num: 1,\n  },\n  {\n    name: \"魔導戦士 ブレイカー\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"魔法使い\",\n    atk: 1600,\n    effect_atk: 1900,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"同族感染ウィルス\",\n    lv: 4,\n    attribute: \"水\",\n    type: \"水\",\n    atk: 1600,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"ブレイドナイト\",\n    lv: 4,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 1600,\n    effect_atk: 2000,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"異次元の女戦士\",\n    lv: 4,\n    attribute: \"光\",\n    type: \"戦士\",\n    atk: 1500,\n    def: 1600,\n    num: 3,\n  },\n  {\n    name: \"首領・ザルーグ\",\n    lv: 4,\n    attribute: \"闇\",\n    type: \"戦士\",\n    atk: 1400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"ならず者傭兵部隊\",\n    lv: 4,\n    attribute: \"地\",\n    type: \"戦士\",\n    atk: 1000,\n    def: 1000,\n    num: 1,\n  },\n  {\n    name: \"ファイバーポッド\",\n    lv: 3,\n    attribute: \"地\",\n    type: \"植物\",\n    atk: 500,\n    def: 500,\n    num: 1,\n  },\n  {\n    name: \"お注射天使リリー\",\n    lv: 3,\n    attribute: \"地\",\n    type: \"魔法使い\",\n    atk: 400,\n    effect_atk: 3400,\n    def: 1500,\n    num: 1,\n  },\n  {\n    name: \"魂を削る死霊\",\n    lv: 3,\n    attribute: \"闇\",\n    type: \"アンデット\",\n    atk: 300,\n    def: 200,\n    num: 1,\n  },\n  {\n    name: \"聖なる魔術師\",\n    lv: 1,\n    attribute: \"光\",\n    type: \"魔法使い\",\n    atk: 300,\n    def: 400,\n    num: 2,\n  },\n  {\n    name: \"キラー・スネーク\",\n    lv: 1,\n    attribute: \"水\",\n    type: \"爬虫類\",\n    atk: 300,\n    def: 250,\n    num: 1,\n  },\n];\n\nconst effectATK = (effect_atk: number | undefined, monster: Monster) =>\n  effect_atk === undefined ? monster.atk : effect_atk;\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"レベル\",\n    dataField: \"lv\",\n    sort: true,\n  },\n  {\n    text: \"属性\",\n    dataField: \"attribute\",\n    sort: true,\n  },\n  {\n    text: \"種族\",\n    dataField: \"type\",\n    sort: true,\n  },\n  {\n    text: \"攻撃力\",\n    dataField: \"atk\",\n    sort: true,\n  },\n  {\n    text: \"効果攻撃力\",\n    dataField: \"effect_atk\",\n    formatter: effectATK,\n    sort: true,\n    sortValue: effectATK,\n  },\n  {\n    text: \"守備力\",\n    dataField: \"def\",\n    sort: true,\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n    sort: true,\n  },\n];\n\nconst columnsMobile = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"攻撃力\",\n    dataField: \"atk\",\n    sort: true,\n  },\n  {\n    text: \"効果攻撃力\",\n    dataField: \"effect_atk\",\n    formatter: effectATK,\n    sort: true,\n    sortValue: effectATK,\n  },\n  {\n    text: \"守備力\",\n    dataField: \"def\",\n    sort: true,\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n    sort: true,\n  },\n];\n\nconst MonsterTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={isMobileOnly ? columnsMobile : columns}\n    defaultSorted={[{ dataField: \"atk\", order: \"desc\" }]}\n  ></BootstrapTable>\n);\n\nexport default MonsterTable;\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { linkName } from \"./common\";\n\ntype Type = \"通常\" | \"儀式\" | \"永続\" | \"装備\" | \"フィールド\" | \"速攻\";\n\ninterface Spell {\n  name: string;\n  type: Type;\n  num: number;\n}\n\nconst data: Spell[] = [\n  {\n    name: \"押収\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強引な番兵\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強欲な壺\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"苦渋の選択\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"心変わり\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"大嵐\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"ライトニング・ボルテックス\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"光の護封剣\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"抹殺の使徒\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"増援\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"強奪\",\n    type: \"装備\",\n    num: 1,\n  },\n  {\n    name: \"早すぎた埋葬\",\n    type: \"装備\",\n    num: 1,\n  },\n  {\n    name: \"スケープ・ゴート\",\n    type: \"速攻\",\n    num: 1,\n  },\n  {\n    name: \"サイクロン\",\n    type: \"速攻\",\n    num: 1,\n  },\n];\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"種類\",\n    dataField: \"type\",\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n  },\n];\n\nconst SpellTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={columns}\n  ></BootstrapTable>\n);\n\nexport default SpellTable;\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport { linkName } from \"./common\";\n\ntype Type = \"通常\" | \"永続\" | \"カウンター\";\n\ninterface Trap {\n  name: string;\n  type: Type;\n  num: number;\n}\n\nconst data: Trap[] = [\n  {\n    name: \"破壊輪\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"激流葬\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"奈落の落とし穴\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"砂塵の大竜巻\",\n    type: \"通常\",\n    num: 1,\n  },\n  {\n    name: \"炸裂装甲\",\n    type: \"通常\",\n    num: 2,\n  },\n  {\n    name: \"リビングデッドの呼び声\",\n    type: \"永続\",\n    num: 1,\n  },\n];\n\nconst columns = [\n  {\n    text: \"カード名\",\n    dataField: \"name\",\n    formatter: linkName,\n  },\n  {\n    text: \"種類\",\n    dataField: \"type\",\n  },\n  {\n    text: \"枚数\",\n    dataField: \"num\",\n  },\n];\n\nconst TrapTable = () => (\n  <BootstrapTable\n    bootstrap4\n    keyField=\"name\"\n    data={data}\n    columns={columns}\n  ></BootstrapTable>\n);\n\nexport default TrapTable;\n","const Rule = () => {\n  return (\n    <ul>\n      <li>お互いのプレイヤーは04環境デッキを用いてデュエルする</li>\n      <li>先攻後攻を入れ替えての2デュエル1セットでの対戦とする</li>\n      <li>先攻ドローあり</li>\n      <li>\n        召喚成功時に優先権が相手に移っていなければ優先権を放棄することなく召喚したモンスターの起動効果を発動できる\n        <ul>\n          <li>\n            例:\n            あなたは《ならず者傭兵部隊》の召喚に成功した。たとえ相手が《破壊輪》を発動する意思を持っていたとしても、あなたはそれより先に《ならず者傭兵部隊》の起動効果を発動できる。\n          </li>\n        </ul>\n      </li>\n      <li>\n        召喚・反転召喚・特殊召喚を無効にするカードの発動タイミングは存在しないものとして扱う\n        <ul>\n          <li>\n            つまり、モンスターの召喚・反転召喚・特殊召喚は必ず成功する（それらを無効にするカードは存在しないため）\n          </li>\n          <li>\n            例1:\n            あなたは《ならず者傭兵部隊》を召喚するつもりだが、起動効果を直ちに発動する意思はないとする。この場合、《ならず者傭兵部隊》を場に出したタイミングで相手に「何か発動しますか？」と\n            <b>一度だけ</b>\n            確認すれば十分である。言い換えると、確認した場合は召喚成功時にあなたが先に《ならず者傭兵部隊》の効果を発動できる権利を放棄したことになる。\n          </li>\n          <li>\n            例2:\n            あなたが《ならず者傭兵部隊》を場に出したとき、相手に一切の確認をせずに《ならず者傭兵部隊》の起動効果を発動してよい。\n          </li>\n        </ul>\n      </li>\n      <li>\n        《抹殺の使徒》の対象となったカードがリバース効果モンスターだった場合、本来の処理の代わりにお互いのプレイヤーはデッキから同名カードをすべてゲームから除外しデッキをシャッフルする。その後、フィールド上にセットされたカードおよび手札のカードの名前とその枚数を相手プレイヤーに伝える（どのカードがどの位置にあるのかは伝えない）。\n      </li>\n      <li>\n        エラッタされた下記カードについて、それらのテキストはエラッタ前のテキストとして扱う\n        <ul>\n          <li>\n            《キラー・スネーク》:\n            自分のスタンバイフェイズ時にこのカードが墓地に存在している場合、このカードを手札に戻すことができる。\n          </li>\n          <li>\n            《破壊輪》:\n            フィールド上に表側表示で存在するモンスター１体を破壊し、お互いにその攻撃力分のダメージを受ける。\n          </li>\n        </ul>\n      </li>\n      <li>\n        用語の変更（ゲーム影響なし）\n        <ul>\n          <li>リリース → 生け贄</li>\n          <li>アドバンス召喚 → 生け贄召喚</li>\n        </ul>\n      </li>\n    </ul>\n  );\n};\nexport default Rule;\n","interface FAQ {\n  name: string;\n  qas: [string, string][];\n}\nconst faqs: FAQ[] = [\n  {\n    name: \"カオス・ソルジャー －開闢の使者－\",\n    qas: [\n      [\n        \"正規の手順で特殊召喚した《カオス・ソルジャー －開闢の使者－》が《ファイバーポッド》でデッキに戻された場合、その《カオス・ソルジャー －開闢の使者－》に蘇生制限は課せられますか？\",\n        \"はい\",\n      ],\n      [\n        \"《カオス・ソルジャー －開闢の使者－》\bの「フィールド上のモンスター1体を選択してゲームから除外する」効果はメインフェイズ2に特殊召喚した場合でもそのターンに発動できますか？\",\n        \"はい\",\n      ],\n      [\n        \"《カオス・ソルジャー －開闢の使者－》の特殊召喚成功時に相手の《奈落の落とし穴》より先に《カオス・ソルジャー －開闢の使者－》\bの「フィールド上のモンスター1体を選択してゲームから除外する」効果を発動できますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"人造人間－サイコ・ショッカー\",\n    qas: [\n      [\n        \"《人造人間－サイコ・ショッカー》の召喚成功時に《激流葬》のような召喚反応罠カードを発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《人造人間－サイコ・ショッカー》を対象に《リビングデッドの呼び声》を発動した場合、《人造人間－サイコ・ショッカー》は墓地から特殊召喚されますか？\",\n        \"はい\",\n      ],\n      [\n        \"《人造人間－サイコ・ショッカー》が場に存在する状態で《リビングデッドの呼び声》を破壊すると《リビングデッドの呼び声》で蘇生したモンスターは破壊されますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《リビングデッドの呼び声》で蘇生した《人造人間－サイコ・ショッカー》を破壊すると《リビングデッドの呼び声》は破壊されますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"天空騎士パーシアス\",\n    qas: [\n      [\n        \"《天空騎士パーシアス》で裏側守備表示の《ファイバーポッド》を攻撃した場合、効果の発動順序はどうなりますか？\",\n        \"《天空騎士パーシアス》でドローした後に《ファイバーポッド》のリバース効果を処理します。なおこれらは発動タイミングが異なり、独立したチェーンブロックとなります（《天空騎士パーシアス》はダメージ計算後の効果発動、《ファイバーポッド》は戦闘結果解決時の効果発動）。\",\n      ],\n    ],\n  },\n  {\n    name: \"イグザリオン・ユニバース\",\n    qas: [\n      [\n        \"《炸裂装甲》の発動タイミングと《イグザリオン・ユニバース》の効果発動タイミングは同じですか？\",\n        \"いいえ、《イグザリオン・ユニバース》の効果の方が発動タイミングが広いです。《炸裂装甲》は攻撃宣言直後のチェーンブロックでのみ発動可能です。《イグザリオン・ユニバース》はバトルステップ終了前のチェーンブロックでも発動可能です。したがって、相手が《炸裂装甲》を発動しないことを確認してから《イグザリオン・ユニバース》の効果を発動できます。\",\n      ],\n      [\n        \"《イグザリオン・ユニバース》の攻撃宣言時に《スケープ・ゴート》が発動されました。巻き戻しにより羊トークンを攻撃する際に《イグザリオン・ユニバース》の効果を発動できますか？\",\n        \"はい\",\n      ],\n      [\n        \"《イグザリオン・ユニバース》で裏側守備表示のモンスターに攻撃する際、そのモンスターが表になった後に《イグザリオン・ユニバース》の効果を発動できますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"霊滅術師 カイクウ\",\n    qas: [\n      [\n        \"《霊滅術師 カイクウ》が攻撃表示のモンスターに攻撃し相手プレイヤーに戦闘ダメージを与えたとき、攻撃したモンスターを《霊滅術師 カイクウ》の除外効果の対象にできますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"攻撃表示の《霊滅術師 カイクウ》と攻撃表示の《異次元の女戦士》が戦闘した場合、それぞれの効果発動の順序はどうなりますか？\",\n        \"《霊滅術師 カイクウ》が《異次元の女戦士》に攻撃した場合は先に《霊滅術師 カイクウ》の効果を発動するかを選択します。《異次元の女戦士》が《霊滅術師 カイクウ》に攻撃した場合は先に《異次元の女戦士》の効果を発動するかを選択します。\",\n      ],\n    ],\n  },\n  {\n    name: \"魔導戦士 ブレイカー\",\n    qas: [\n      [\n        \"《魔導戦士 ブレイカー》の召喚成功時に\b相手の《奈落の落とし穴》より先に《魔導戦士 ブレイカー》の起動効果を発動できますか？\",\n        \"いいえ、《魔導戦士 ブレイカー》の召喚成功時に魔力カウンターを乗せる誘発効果が発動するため、相手に優先権が移ります。\",\n      ],\n      [\n        \"《魔導戦士 ブレイカー》の反転召喚・特殊召喚成功時に魔力カウンターを乗せる誘発効果は発動しますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"同族感染ウィルス\",\n    qas: [\n      [\n        \"《同族感染ウィルス》の召喚成功時に\b相手の《奈落の落とし穴》より先に《同族感染ウィルス》の起動効果を発動できますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"ブレイドナイト\",\n    qas: [],\n  },\n  {\n    name: \"異次元の女戦士\",\n    qas: [\n      [\n        \"攻撃表示の《霊滅術師 カイクウ》と攻撃表示の《異次元の女戦士》が戦闘した場合、それぞれの効果発動の順序はどうなりますか？\",\n        \"《霊滅術師 カイクウ》が《異次元の女戦士》に攻撃した場合は先に《霊滅術師 カイクウ》の効果を発動するかを選択します。《異次元の女戦士》が《霊滅術師 カイクウ》に攻撃した場合は先に《異次元の女戦士》の効果を発動するかを選択します。\",\n      ],\n      [\n        \"《異次元の女戦士》で裏側守備表示の《ファイバーポッド》を攻撃した場合、効果の発動順序はどうなりますか？\",\n        \"まず強制効果である《ファイバーポッド》の効果が発動し、それにチェーンする形で任意効果である《異次元の女戦士》の効果を発動できます。\",\n      ],\n      [\n        \"《異次元の女戦士》で《リビングデッドの呼び声》で特殊召喚されたモンスターに攻撃しました。そのモンスターを戦闘破壊した上で《異次元の女戦士》の効果を発動した場合、《リビングデッドの呼び声》は破壊されますか？\",\n        \"はい\",\n      ],\n      [\n        \"《リビングデッドの呼び声》で特殊召喚された《異次元の女戦士》が相手モンスターに戦闘破壊された上で《異次元の女戦士》の効果を発動した場合、《リビングデッドの呼び声》は破壊されますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"首領・ザルーグ\",\n    qas: [\n      [\n        \"相手のデッキが1枚以下の状態で《首領・ザルーグ》のデッキの上から2枚を墓地へ送る効果を発動した場合、デッキ切れにより決闘に勝利しますか？\",\n        \"いいえ、相手のデッキが0枚の状態で相手がドローするまでは決闘に勝利しません。\",\n      ],\n    ],\n  },\n  {\n    name: \"ならず者傭兵部隊\",\n    qas: [\n      [\n        \"《ならず者傭兵部隊》の召喚成功時に\b相手の《破壊輪》より先に《ならず者傭兵部隊》の起動効果を発動できますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"ファイバーポッド\",\n    qas: [\n      [\n        \"裏側守備表示の《ファイバーポッド》が攻撃され戦闘破壊が確定した場合、その《ファイバーポッド》自身はデッキに戻りますか？\",\n        \"はい\",\n      ],\n      [\n        \"反転召喚して発動した《ファイバーポッド》の効果にチェーンして《破壊輪》が発動されました。《破壊輪》や《破壊輪》で破壊されたモンスターはデッキに戻りますか？\",\n        \"はい\",\n      ],\n      [\n        \"《天空騎士パーシアス》で裏側守備表示の《ファイバーポッド》を攻撃した場合、効果の発動順序はどうなりますか？\",\n        \"《天空騎士パーシアス》でドローした後に《ファイバーポッド》のリバース効果を処理します。なおこれらは発動タイミングが異なり、独立したチェーンブロックとなります（《天空騎士パーシアス》はダメージ計算後の効果発動、《ファイバーポッド》は戦闘結果解決時の効果発動）。\",\n      ],\n      [\n        \"《異次元の女戦士》で裏側守備表示の《ファイバーポッド》を攻撃した場合、効果の発動順序はどうなりますか？\",\n        \"まず強制効果である《ファイバーポッド》の効果が発動し、それにチェーンする形で任意効果である《異次元の女戦士》の効果を発動できます。\",\n      ],\n    ],\n  },\n  {\n    name: \"お注射天使リリー\",\n    qas: [\n      [\n        \"一度のダメージステップに《お注射天使リリー》の効果を2回以上発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《お注射天使リリー》の効果発動後に《炸裂装甲》を発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《お注射天使リリー》の効果で攻撃力がアップしている状態で《破壊輪》を発動するタイミングはありますか？\",\n        \"ありません\",\n      ],\n    ],\n  },\n  {\n    name: \"魂を削る死霊\",\n    qas: [\n      [\n        \"《魂を削る死霊》を対象に《強奪》を発動し、《強奪》にチェーンして発動した《サイクロン》で《強奪》が破壊されました。《魂を削る死霊》は破壊されますか？\",\n        \"はい\",\n      ],\n      [\n        \"《魂を削る死霊》を対象に《破壊輪》を発動しました。《破壊輪》によるダメージは発生しますか？\",\n        \"はい\",\n      ],\n      [\n        \"《魂を削る死霊》を対象に《早すぎた埋葬》を発動しました。《魂を削る死霊》の特殊召喚成功時に《激流葬》を発動できますか？\",\n        \"その《魂を削る死霊》以外に場にモンスターが存在すれば発動できます。特殊召喚した《魂を削る死霊》はチェーンブロックを作らずに破壊されるためです。\",\n      ],\n      [\n        \"《魂を削る死霊》を対象に《早すぎた埋葬》を発動しました。その《魂を削る死霊》を対象に《破壊輪》を発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"裏側守備表示の《魂を削る死霊》を対象に《心変わり》を発動しました。《魂を削る死霊》は破壊されますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"聖なる魔術師\",\n    qas: [\n      [\n        \"《光の護封剣》の発動にチェーンして《サイクロン》を発動しました。《光の護封剣》の「相手フィールド上に存在するモンスターを全て表側表示にする」効果で表側になった《聖なる魔術師》でチェーン発動した《サイクロン》を手札に加えられますか？\",\n        \"はい、《聖なる魔術師》の効果は《光の護封剣》と《サイクロン》のチェーンブロックとは異なるチェーンブロックで処理されるためです。\",\n      ],\n    ],\n  },\n  {\n    name: \"キラー・スネーク\",\n    qas: [],\n  },\n  {\n    name: \"押収\",\n    qas: [],\n  },\n  {\n    name: \"強引な番兵\",\n    qas: [],\n  },\n  {\n    name: \"強欲な壺\",\n    qas: [],\n  },\n  {\n    name: \"苦渋の選択\",\n    qas: [],\n  },\n  {\n    name: \"心変わり\",\n    qas: [\n      [\n        \"《心変わり》でコントロールを得たモンスターを相手に返すとき、相手の場にモンスターが5体存在するとどうなりますか？\",\n        \"コントロールを得たモンスターは破壊されます。\",\n      ],\n    ],\n  },\n  {\n    name: \"大嵐\",\n    qas: [],\n  },\n  {\n    name: \"ライトニング・ボルテックス\",\n    qas: [\n      [\n        \"相手の場に表側のモンスターが存在しない状況でも《ライトニング・ボルテックス》を発動できますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"光の護封剣\",\n    qas: [\n      [\n        \"相手の場にモンスターが存在しない場合に《光の護封剣》を発動できますか？\",\n        \"はい\",\n      ],\n      [\n        \"《光の護封剣》の発動にチェーンした《サイクロン》でその《光の護封剣》を破壊しました。《光の護封剣》の「相手フィールド上に存在するモンスターを全て表側表示にする」効果は適用されますか？\",\n        \"はい\",\n      ],\n      [\n        \"《光の護封剣》の発動にチェーンして《サイクロン》を発動しました。《光の護封剣》の「相手フィールド上に存在するモンスターを全て表側表示にする」効果で表側になった《聖なる魔術師》でチェーン発動した《サイクロン》を手札に加えられますか？\",\n        \"はい、《光の護封剣》と《サイクロン》のチェーンブロックとは異なるチェーンブロックで《聖なる魔術師》の効果が発動されるためです。\",\n      ],\n    ],\n  },\n  {\n    name: \"抹殺の使徒\",\n    qas: [\n      [\n        \"《抹殺の使徒》で除外したリバースモンスターの残り枚数が0枚だと確定している場合もリバース効果モンスターだった場合の効果は処理しますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"増援\",\n    qas: [\n      [\n        \"デッキに戦士族モンスターが存在しないことが確定している場合に《増援》を発動できますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"強奪\",\n    qas: [\n      [\n        \"（《強奪》を装備していないモンスターの）攻撃宣言時に《強奪》が破壊されモンスターのコントロールが相手に戻りました。攻撃の巻き戻しは発生しますか？\",\n        \"はい\",\n      ],\n      [\n        \"《強奪》でコントロールを得たモンスターを相手に返すとき、相手の場にモンスターが5体存在するとどうなりますか？\",\n        \"コントロールを得たモンスターは破壊されます。\",\n      ],\n      [\n        \"《魂を削る死霊》を対象に《強奪》を発動し、《強奪》にチェーンして発動した《サイクロン》で《強奪》が破壊されました。《魂を削る死霊》は破壊されますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"早すぎた埋葬\",\n    qas: [],\n  },\n  {\n    name: \"スケープ・ゴート\",\n    qas: [\n      [\n        \"《スケープ・ゴート》を発動したターンにモンスターをセットできますか？\",\n        \"はい\",\n      ],\n      [\n        \"チェーン2以降に《スケープ・ゴート》を発動しました。羊トークンの特殊召喚に対して《激流葬》を発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《スケープ・ゴート》にチェーンした《サイクロン》で《強奪》が破壊され自分の場のモンスターが2体以上になりました。《スケープ・ゴート》の効果は不発になりますか？\",\n        \"はい\",\n      ],\n      [\n        \"自分の《リビングデッドの呼び声》にチェーンした《サイクロン》で《リビングデッドの呼び声》が破壊されました。そのターンに《スケープ・ゴート》を発動できますか？\",\n        \"いいえ\",\n      ],\n    ],\n  },\n  {\n    name: \"サイクロン\",\n    qas: [\n      [\n        \"魔法・罠の発動にチェーンした《サイクロン》でその魔法・罠を破壊した場合、その魔法・罠の効果は不発になりますか？\",\n        \"装備魔法または永続罠であれば不発になります。それ以外であれば不発になりません。\",\n      ],\n      [\n        \"《光の護封剣》の発動にチェーンした《サイクロン》でその《光の護封剣》を破壊しました。《光の護封剣》の「相手フィールド上に存在するモンスターを全て表側表示にする」効果は適用されますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"破壊輪\",\n    qas: [\n      [\n        \"お互いのライフポイント以上の攻撃力を持つモンスターを《破壊輪》で破壊した場合、引き分けになりますか？\",\n        \"はい\",\n      ],\n      [\n        \"場で発動したモンスター効果にチェーンして《破壊輪》でそのモンスターを破壊した場合、そのモンスターの効果は不発になりますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《お注射天使リリー》の効果で攻撃力がアップしている状態で《破壊輪》を発動するタイミングはありますか？\",\n        \"ありません\",\n      ],\n      [\n        \"《魂を削る死霊》を対象に《破壊輪》を発動しました。《破壊輪》によるダメージは発生しますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"激流葬\",\n    qas: [\n      [\n        \"《ならず者傭兵部隊》の召喚成功時に《ならず者傭兵部隊》の効果が発動されました。この効果にチェーンして《激流葬》を発動できますか？\",\n        \"はい\",\n      ],\n      [\n        \"モンスター召喚成功時に《破壊輪》が発動されました。《破壊輪》にチェーンして《激流葬》を発動できますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"奈落の落とし穴\",\n    qas: [],\n  },\n  {\n    name: \"砂塵の大竜巻\",\n    qas: [\n      [\n        \"自分の魔法・罠ゾーンにカードが5枚存在する状態で《砂塵の大竜巻》を発動できますか？発動できる場合、《砂塵の大竜巻》をセットしていたゾーンに手札の魔法・罠をセットできますか？\",\n        \"《砂塵の大竜巻》は発動できますが、セットはできません。《砂塵の大竜巻》はその効果を処理している間は魔法・罠ゾーンに存在するためです。\",\n      ],\n      [\n        \"《砂塵の大竜巻》\bで対象に指定したカードがチェーン発動されました。《砂塵の大竜巻》の効果で魔法・罠をセットできますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n  {\n    name: \"炸裂装甲\",\n    qas: [\n      [\n        \"《炸裂装甲》の発動タイミングと《イグザリオン・ユニバース》の効果発動タイミングは同じですか？\",\n        \"いいえ、《イグザリオン・ユニバース》の効果の方が発動タイミングが広いです。《炸裂装甲》は攻撃宣言直後のチェーンブロックでのみ発動可能です。《イグザリオン・ユニバース》はバトルステップ終了前のチェーンブロックでも発動可能です。したがって、相手が《炸裂装甲》を発動しないことを確認してから《イグザリオン・ユニバース》の効果を発動できます。\",\n      ],\n    ],\n  },\n  {\n    name: \"リビングデッドの呼び声\",\n    qas: [\n      [\n        \"チェーン2以降に《リビングデッドの呼び声》を発動した場合、モンスターの特殊召喚に対して《激流葬》や《奈落の落とし穴》を発動できますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"直接攻撃宣言時に《リビングデッドの呼び声》が発動されました。特殊召喚されたモンスターに攻撃する必要はありますか？\",\n        \"いいえ、巻き戻しが発生します。\",\n      ],\n      [\n        \"《人造人間－サイコ・ショッカー》を対象に《リビングデッドの呼び声》を発動した場合、《人造人間－サイコ・ショッカー》は墓地から特殊召喚されますか？\",\n        \"はい\",\n      ],\n      [\n        \"《人造人間－サイコ・ショッカー》が場に存在する状態で《リビングデッドの呼び声》を破壊すると《リビングデッドの呼び声》で蘇生したモンスターは破壊されますか？\",\n        \"いいえ\",\n      ],\n      [\n        \"《リビングデッドの呼び声》で蘇生した《人造人間－サイコ・ショッカー》を破壊すると《リビングデッドの呼び声》は破壊されますか？\",\n        \"はい\",\n      ],\n    ],\n  },\n];\n\nconst FAQList = () => {\n  return (\n    <>\n      {faqs.map((faq) => (\n        <>\n          <h2 id={faq.name}>《{faq.name}》</h2>\n          {faq.qas.map(([q, a]) => (\n            <p>\n              Q: {q} <br />\n              A: {a}\n            </p>\n          ))}\n        </>\n      ))}\n    </>\n  );\n};\nexport default FAQList;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport LP from \"./LP\";\nimport MonsterTable from \"./Monster\";\nimport SpellTable from \"./Spell\";\nimport TrapTable from \"./Trap\";\nimport Rule from \"./Rule\";\nimport FAQList from \"./FAQ\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const base = process.env.PUBLIC_URL;\n  return (\n    <Router basename={base}>\n      <div className=\"App\">\n        <Navbar bg=\"light\" expand sticky=\"top\">\n          <Navbar.Brand as={Link} to=\"/\">\n            04環境\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/monster\">\n                モンスター\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/spell\">\n                魔法\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/trap\">\n                罠\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/rule\">\n                ルール\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/faq\">\n                FAQ\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/\" exact>\n            <LP />\n          </Route>\n          <Route path=\"/monster\">\n            <MonsterTable />\n          </Route>\n          <Route path=\"/spell\">\n            <SpellTable />\n          </Route>\n          <Route path=\"/trap\">\n            <TrapTable />\n          </Route>\n          <Route path=\"/rule\">\n            <Rule />\n          </Route>\n          <Route path=\"/faq\">\n            <FAQList />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}