{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","data","React","useMemo","name","lv","attribute","type","atk","def","num","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43235103.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useTable, Column } from 'react-table';\n\ntype Attribute = '闇' | '光' | '地' | '水' | '炎' | '風';\ntype Type = 'ドラゴン' | '魔法使い' | 'アンデット' | '戦士' | '獣戦士' | '獣' | '鳥獣' | '悪魔' | '天使' | '昆虫' | '恐竜' | '爬虫類' | '魚' | '海竜' | '機械' | '雷' | '水' | '炎' | '岩石' | '植物';\n\ninterface Monster {\n  name: string;\n  lv: number;\n  attribute: Attribute;\n  type: Type;\n  atk: number;\n  def: number;\n  num: number;\n}\n\nfunction App() {\n  const data = React.useMemo<Monster[]>(\n    () => [\n      {\n        name: 'カオス・ソルジャー －開闢の使者－',\n        lv: 8,\n        attribute: '光',\n        type: '戦士',\n        atk: 3000,\n        def: 2500,\n        num: 1\n      },\n      {\n        name: '人造人間－サイコ・ショッカー',\n        lv: 6,\n        attribute: '闇',\n        type: '機械',\n        atk: 2400,\n        def: 1500,\n        num: 1\n      },\n      {\n        name: '天空騎士パーシアス',\n        lv: 5,\n        attribute: '光',\n        type: '天使',\n        atk: 1900,\n        def: 1400,\n        num: 1\n      },\n      {\n        name: 'イグザリオン・ユニバース',\n        lv: 4,\n        attribute: '闇',\n        type: '獣戦士',\n        atk: 1800,\n        def: 1900,\n        num: 1\n      },\n      {\n        name: '霊滅術師 カイクウ',\n        lv: 4,\n        attribute: '闇',\n        type: '魔法使い',\n        atk: 1800,\n        def: 700,\n        num: 1\n      },\n      {\n        name: '魔導戦士 ブレイカー',\n        lv: 4,\n        attribute: '闇',\n        type: '魔法使い',\n        atk: 1600,\n        def: 1000,\n        num: 1\n      },\n      {\n        name: '同族感染ウィルス',\n        lv: 4,\n        attribute: '水',\n        type: '水',\n        atk: 1600,\n        def: 1000,\n        num: 1\n      },\n      {\n        name: 'ブレイドナイト',\n        lv: 4,\n        attribute: '光',\n        type: '戦士',\n        atk: 1600,\n        def: 1000,\n        num: 1\n      },\n      {\n        name: 'ならず者傭兵部隊',\n        lv: 4,\n        attribute: '地',\n        type: '戦士',\n        atk: 1000,\n        def: 1000,\n        num: 1\n      },\n      {\n        name: '異次元の女戦士',\n        lv: 4,\n        attribute: '光',\n        type: '戦士',\n        atk: 1500,\n        def: 1600,\n        num: 3\n      },\n      {\n        name: '首領・ザルーグ',\n        lv: 4,\n        attribute: '闇',\n        type: '戦士',\n        atk: 1400,\n        def: 1500,\n        num: 1\n      },\n      {\n        name: 'ファイバーポッド',\n        lv: 3,\n        attribute: '地',\n        type: '植物',\n        atk: 500,\n        def: 500,\n        num: 1\n      },\n      {\n        name: 'お注射天使リリー',\n        lv: 3,\n        attribute: '地',\n        type: '魔法使い',\n        atk: 400,\n        def: 1500,\n        num: 1\n      },\n      {\n        name: '魂を削る死霊',\n        lv: 3,\n        attribute: '闇',\n        type: 'アンデット',\n        atk: 300,\n        def: 200,\n        num: 1\n      },\n      {\n        name: '聖なる魔術師',\n        lv: 1,\n        attribute: '光',\n        type: '魔法使い',\n        atk: 300,\n        def: 400,\n        num: 2\n      },\n      {\n        name: 'キラー・スネーク',\n        lv: 1,\n        attribute: '水',\n        type: '爬虫類',\n        atk: 300,\n        def: 250,\n        num: 1\n      },\n    ],\n    []\n  );\n  const columns = React.useMemo<Column<Monster>[]>(\n    () => [\n      {\n        Header: 'カード名',\n        accessor: 'name'\n      },\n      {\n        Header: 'レベル',\n        accessor: 'lv'\n      },\n      {\n        Header: '属性',\n        accessor: 'attribute'\n      },\n      {\n        Header: '種族',\n        accessor: 'type'\n      },\n      {\n        Header: '攻撃力',\n        accessor: 'atk'\n      },\n      {\n        Header: '守備力',\n        accessor: 'def'\n      },\n      {\n        Header: '枚数',\n        accessor: 'num'\n      },\n    ],\n    []\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data })\n\n  return (\n    <div className=\"App\">\n      <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps()}\n                  style={{\n                    borderBottom: 'solid 3px red',\n                    background: 'aliceblue',\n                    color: 'black',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: '10px',\n                        border: 'solid 1px gray',\n                        background: 'papayawhip',\n                      }}\n                    >\n                      {cell.render('Cell')}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}